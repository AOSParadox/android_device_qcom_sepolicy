# Copyright (c) 2015, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#     * Neither the name of The Linux Foundation nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# RIDL
type RIDL, domain;
type RIDL_exec, exec_type, file_type;

# make transition from init to its domain
init_daemon_domain(RIDL)

# Every macro needs to be in here for USERDEBUG
userdebug_or_eng(`

   # USERDEBUG only!!!
   # allow all operations for now
   permissive RIDL;

   # allow socket connections to us
   net_domain(RIDL)

   # Various permissions from audit2allow
   allow RIDL RIDL_data_file:dir { setattr read create write getattr remove_name open add_name };
   allow RIDL RIDL_data_file:file { rename setattr read lock create write getattr unlink open };
   allow RIDL dalvikcache_data_file:dir { write add_name };
   allow RIDL dalvikcache_data_file:file { write create };
   allow RIDL debugfs:file read;
   #allow RIDL device:chr_file { read open };
   allow RIDL device:dir { read open };
   allow RIDL firmware_file:file { read open };
   allow RIDL fuse:dir { write search create setattr add_name };
   allow RIDL healthd:dir { getattr search };
   allow RIDL healthd:file { read open };
   allow RIDL init:dir { getattr search };
   allow RIDL init:file { read open };
   allow RIDL kernel:dir { getattr search };
   allow RIDL kernel:file { read open };
   allow RIDL kernel:system { module_request syslog_mod };
   allow RIDL lmkd:dir { getattr search };
   allow RIDL lmkd:file { read open };
   allow RIDL logd:dir { getattr search };
   allow RIDL logd:file { read open };
   allow RIDL logd:unix_stream_socket connectto;
   allow RIDL logdr_socket:sock_file write;
   allow RIDL qmuxd:unix_stream_socket connectto;
   allow RIDL qmuxd_socket:dir { write add_name };
   allow RIDL qmuxd_socket:sock_file { write create };
   allow RIDL ramdump_device:chr_file { read open setattr };
   allow RIDL self:capability { sys_module net_raw fsetid net_admin fowner dac_override };
   allow RIDL self:capability2 syslog;
   allow RIDL self:packet_socket { create ioctl };
   allow RIDL servicemanager:binder call;
   allow RIDL servicemanager:dir { getattr search };
   allow RIDL servicemanager:file { read open };
   allow RIDL shell_exec:file { read execute open execute_no_trans };
   allow RIDL sysfs:file write;
   allow RIDL system_file:file execute_no_trans;
   allow RIDL ueventd:dir { getattr search };
   allow RIDL ueventd:file { read open };
   allow RIDL vold:dir { getattr search };
   #allow RIDL zygote_exec:file { read getattr open execute execute_no_trans }

')

